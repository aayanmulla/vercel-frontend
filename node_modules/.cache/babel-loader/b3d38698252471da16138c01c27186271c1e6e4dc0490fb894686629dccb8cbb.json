{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import DatePicker from\"react-datepicker\";import\"react-datepicker/dist/react-datepicker.css\";import\"./Bookings.css\";import Navbar from\"../NavBar/NavBar\";import Reservation from\"../Reservations/Reservation\";import Footer from\"../Footer/Footer\";import{FaCalendarAlt}from\"react-icons/fa\";// Import calendar icon\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Bookings=()=>{const[parkingSlots,setParkingSlots]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[bookedSlotId]=useState(null);const[selectedSlotId,setSelectedSlotId]=useState(null);const[selectedTimeSlot,setSelectedTimeSlot]=useState(\"\");const[selectedDate,setSelectedDate]=useState(null);// Custom input component that shows calendar icon and selected date\nconst CustomDateInput=/*#__PURE__*/React.forwardRef((_ref,ref)=>{let{value,onClick}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"custom-date-input\",onClick:onClick,ref:ref,children:[/*#__PURE__*/_jsx(FaCalendarAlt,{className:\"calendar-icon\"}),value&&/*#__PURE__*/_jsx(\"span\",{className:\"selected-date\",children:value})]});});const fetchAllData=async()=>{setLoading(true);try{const[parkingRes,latestRes,reservedRes]=await Promise.all([fetch(\"http://localhost:5001/api/parking/slots\"),fetch(\"http://localhost:5001/api/slots/latest-booked-slot\"),fetch(\"http://localhost:5001/api/reserved/slots\")]);if(!parkingRes.ok||!latestRes.ok||!reservedRes.ok){throw new Error(\"Failed to fetch one or more data sources\");}const parkingData=await parkingRes.json();const latestData=await latestRes.json();const reservedData=await reservedRes.json();const parkingSlots=parkingData.parkingSlots||[];const reservedSlots=reservedData.parkingSlots||[];const latestBookedSlotId=latestData.latestBookedSlotId;const reservedMap=new Map(reservedSlots.map(slot=>[slot.id,slot]));const updatedSlots=parkingSlots.map(slot=>{if(reservedMap.has(slot.id)){return reservedMap.get(slot.id);// Use reserved slot data (includes timeSlot)\n}return slot;});if(latestBookedSlotId){const slotIndex=updatedSlots.findIndex(slot=>slot.id===latestBookedSlotId);if(slotIndex!==-1){updatedSlots[slotIndex]={...updatedSlots[slotIndex],isOccupied:true,status:\"occupied\"};}else{updatedSlots.push({id:latestBookedSlotId,isOccupied:true,status:\"occupied\"});}}setParkingSlots(updatedSlots);return updatedSlots;}catch(error){console.error(\"Error fetching data:\",error);setError(error.message);return[];}finally{setLoading(false);}};useEffect(()=>{fetchAllData();const interval=setInterval(fetchAllData,180000);return()=>clearInterval(interval);},[]);const handlePayment=async slotId=>{const bookingDate=selectedDate||new Date();if(!selectedTimeSlot){alert(\"Please select a time slot before proceeding with payment.\");return;}const options={key:\"rzp_test_8aHz8s9WnoELui\",amount:500*100,currency:\"INR\",name:\"ParkEz\",description:`Parking Slot Payment: ${bookingDate.toLocaleDateString()} ${selectedTimeSlot}`,handler:async function(response){try{console.log('Fetching slot details for slotId:',slotId);const slotRes=await fetch(`http://localhost:5001/api/reserved/slotNumber/${slotId}`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":`Bearer ${localStorage.getItem('token')}`}});if(!slotRes.ok){const errorText=await slotRes.text();console.error(\"Error fetching slot:\",slotRes.status,errorText);throw new Error(\"Slot not found\");}const slotData=await slotRes.json();if(!slotData._id){alert(\"Slot not found. Please try again.\");return;}const objectId=slotData._id;console.log('Fetched objectId:',objectId);const updateRes=await fetch(`http://localhost:5001/api/reserved/${objectId}`,{method:\"PATCH\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":`Bearer ${localStorage.getItem('token')}`},body:JSON.stringify({isOccupied:true,paymentId:response.razorpay_payment_id,timeSlot:selectedTimeSlot,bookedAt:bookingDate.toISOString(),status:'occupied'})});if(!updateRes.ok){const errorText=await updateRes.text();console.error(\"Error updating slot:\",updateRes.status,errorText);throw new Error(\"Failed to update slot status\");}console.log(\"Slot successfully updated!\");await fetchAllData();alert(`Payment successful! Your slot has been reserved for ${bookingDate.toLocaleDateString()} ${selectedTimeSlot}`);}catch(error){console.error(\"Payment processing error:\",error);alert(\"Payment succeeded but error updating reservation. Contact support.\");}},prefill:{name:\"Aayan Mulla\",email:\"aayanmulla10@gmail.com\",contact:\"7083076077\"},theme:{color:\"#3399cc\"}};try{const rzp1=new window.Razorpay(options);rzp1.open();}catch(error){console.error(\"Error opening payment dialog:\",error);alert(\"Failed to initialize payment. Please try again.\");}};const handleDateChange=date=>{setSelectedDate(date);setSelectedSlotId(null);setSelectedTimeSlot(\"\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"bookings-container\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"bookings-content\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"bookings-heading\",children:\"Ajeenkya DY Patil Parking Zone\"}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading parking slots...\"}):error?/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"date-picker-container\",children:/*#__PURE__*/_jsx(DatePicker,{selected:selectedDate,onChange:handleDateChange,minDate:new Date(),customInput:/*#__PURE__*/_jsx(CustomDateInput,{}),dateFormat:\"MMMM d, yyyy\",placeholderText:\"\",withPortal:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"bookings-grid\",children:parkingSlots.map(slot=>{const isOccupied=slot.isOccupied||bookedSlotId===slot.id;return/*#__PURE__*/_jsxs(\"div\",{className:`parking-slot ${slot.isOccupied===null?\"under-construction\":isOccupied?\"occupied\":\"available\"}`,onClick:()=>{if(!slot.isOccupied&&slot.isOccupied!==null){setSelectedSlotId(slot.id);}},children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Slot \",slot.id]}),/*#__PURE__*/_jsx(\"span\",{children:slot.isOccupied===null?\"Under Construction\":isOccupied?slot.timeSlot?`Booked for ${slot.timeSlot}`:\"Occupied\":\"Available\"}),selectedSlotId===slot.id&&!isOccupied&&/*#__PURE__*/_jsxs(\"div\",{className:\"time-slot-selection\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Select Time Slot:\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedTimeSlot,onChange:e=>setSelectedTimeSlot(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- Select --\"}),/*#__PURE__*/_jsx(\"option\",{value:\"9 AM - 12 PM\",children:\"9 AM - 12 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"12 PM - 3 PM\",children:\"12 PM - 3 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"3 PM - 6 PM\",children:\"3 PM - 6 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"6 PM - 9 PM\",children:\"6 PM - 9 PM\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handlePayment(slot.id),children:\"Book Now\"})]})]},slot.id);})})]})]}),/*#__PURE__*/_jsx(Reservation,{}),/*#__PURE__*/_jsx(Footer,{})]});};export default Bookings;","map":{"version":3,"names":["React","useEffect","useState","DatePicker","Navbar","Reservation","Footer","FaCalendarAlt","jsx","_jsx","jsxs","_jsxs","Bookings","parkingSlots","setParkingSlots","loading","setLoading","error","setError","bookedSlotId","selectedSlotId","setSelectedSlotId","selectedTimeSlot","setSelectedTimeSlot","selectedDate","setSelectedDate","CustomDateInput","forwardRef","_ref","ref","value","onClick","className","children","fetchAllData","parkingRes","latestRes","reservedRes","Promise","all","fetch","ok","Error","parkingData","json","latestData","reservedData","reservedSlots","latestBookedSlotId","reservedMap","Map","map","slot","id","updatedSlots","has","get","slotIndex","findIndex","isOccupied","status","push","console","message","interval","setInterval","clearInterval","handlePayment","slotId","bookingDate","Date","alert","options","key","amount","currency","name","description","toLocaleDateString","handler","response","log","slotRes","method","headers","localStorage","getItem","errorText","text","slotData","_id","objectId","updateRes","body","JSON","stringify","paymentId","razorpay_payment_id","timeSlot","bookedAt","toISOString","prefill","email","contact","theme","color","rzp1","window","Razorpay","open","handleDateChange","date","selected","onChange","minDate","customInput","dateFormat","placeholderText","withPortal","e","target"],"sources":["/Users/karanpaigude/Desktop/Projects/Aayan Project/NewProject/ParkEz_Frontend/src/screens/Bookings/Bookings.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./Bookings.css\";\nimport Navbar from \"../NavBar/NavBar\";\nimport Reservation from \"../Reservations/Reservation\";\nimport Footer from \"../Footer/Footer\";\nimport { FaCalendarAlt } from \"react-icons/fa\"; // Import calendar icon\n\nconst Bookings = () => {\n    const [parkingSlots, setParkingSlots] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [bookedSlotId] = useState(null);\n    const [selectedSlotId, setSelectedSlotId] = useState(null);\n    const [selectedTimeSlot, setSelectedTimeSlot] = useState(\"\");\n    const [selectedDate, setSelectedDate] = useState(null);\n\n    // Custom input component that shows calendar icon and selected date\n    const CustomDateInput = React.forwardRef(({ value, onClick }, ref) => (\n        <div className=\"custom-date-input\" onClick={onClick} ref={ref}>\n            <FaCalendarAlt className=\"calendar-icon\" />\n            {value && <span className=\"selected-date\">{value}</span>}\n        </div>\n    ));\n\n    const fetchAllData = async () => {\n        setLoading(true);\n        try {\n            const [parkingRes, latestRes, reservedRes] = await Promise.all([\n                fetch(\"http://localhost:5001/api/parking/slots\"),\n                fetch(\"http://localhost:5001/api/slots/latest-booked-slot\"),\n                fetch(\"http://localhost:5001/api/reserved/slots\"),\n            ]);\n\n            if (!parkingRes.ok || !latestRes.ok || !reservedRes.ok) {\n                throw new Error(\"Failed to fetch one or more data sources\");\n            }\n\n            const parkingData = await parkingRes.json();\n            const latestData = await latestRes.json();\n            const reservedData = await reservedRes.json();\n\n            const parkingSlots = parkingData.parkingSlots || [];\n            const reservedSlots = reservedData.parkingSlots || [];\n            const latestBookedSlotId = latestData.latestBookedSlotId;\n\n            const reservedMap = new Map(reservedSlots.map(slot => [slot.id, slot]));\n\n            const updatedSlots = parkingSlots.map(slot => {\n                if (reservedMap.has(slot.id)) {\n                    return reservedMap.get(slot.id); // Use reserved slot data (includes timeSlot)\n                }\n                return slot;\n            });\n\n            if (latestBookedSlotId) {\n                const slotIndex = updatedSlots.findIndex(slot => slot.id === latestBookedSlotId);\n                if (slotIndex !== -1) {\n                    updatedSlots[slotIndex] = {\n                        ...updatedSlots[slotIndex],\n                        isOccupied: true,\n                        status: \"occupied\",\n                    };\n                } else {\n                    updatedSlots.push({\n                        id: latestBookedSlotId,\n                        isOccupied: true,\n                        status: \"occupied\",\n                    });\n                }\n            }\n\n            setParkingSlots(updatedSlots);\n            return updatedSlots;\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n            setError(error.message);\n            return [];\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchAllData();\n        const interval = setInterval(fetchAllData, 180000);\n        return () => clearInterval(interval);\n    }, []);\n\n    const handlePayment = async (slotId) => {\n        const bookingDate = selectedDate || new Date();\n\n        if (!selectedTimeSlot) {\n            alert(\"Please select a time slot before proceeding with payment.\");\n            return;\n        }\n\n        const options = {\n            key: \"rzp_test_8aHz8s9WnoELui\",\n            amount: 500 * 100,\n            currency: \"INR\",\n            name: \"ParkEz\",\n            description: `Parking Slot Payment: ${bookingDate.toLocaleDateString()} ${selectedTimeSlot}`,\n            handler: async function (response) {\n                try {\n                    console.log('Fetching slot details for slotId:', slotId);\n\n                    const slotRes = await fetch(`http://localhost:5001/api/reserved/slotNumber/${slotId}`, {\n                        method: \"GET\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n                        }\n                    });\n\n                    if (!slotRes.ok) {\n                        const errorText = await slotRes.text();\n                        console.error(\"Error fetching slot:\", slotRes.status, errorText);\n                        throw new Error(\"Slot not found\");\n                    }\n\n                    const slotData = await slotRes.json();\n                    if (!slotData._id) {\n                        alert(\"Slot not found. Please try again.\");\n                        return;\n                    }\n\n                    const objectId = slotData._id;\n                    console.log('Fetched objectId:', objectId);\n\n                    const updateRes = await fetch(`http://localhost:5001/api/reserved/${objectId}`, {\n                        method: \"PATCH\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n                        },\n                        body: JSON.stringify({\n                            isOccupied: true,\n                            paymentId: response.razorpay_payment_id,\n                            timeSlot: selectedTimeSlot,\n                            bookedAt: bookingDate.toISOString(),\n                            status: 'occupied'\n                        }),\n                    });\n\n                    if (!updateRes.ok) {\n                        const errorText = await updateRes.text();\n                        console.error(\"Error updating slot:\", updateRes.status, errorText);\n                        throw new Error(\"Failed to update slot status\");\n                    }\n\n                    console.log(\"Slot successfully updated!\");\n                    await fetchAllData();\n                    alert(`Payment successful! Your slot has been reserved for ${bookingDate.toLocaleDateString()} ${selectedTimeSlot}`);\n                } catch (error) {\n                    console.error(\"Payment processing error:\", error);\n                    alert(\"Payment succeeded but error updating reservation. Contact support.\");\n                }\n            },\n            prefill: {\n                name: \"Aayan Mulla\",\n                email: \"aayanmulla10@gmail.com\",\n                contact: \"7083076077\"\n            },\n            theme: {\n                color: \"#3399cc\"\n            }\n        };\n\n        try {\n            const rzp1 = new window.Razorpay(options);\n            rzp1.open();\n        } catch (error) {\n            console.error(\"Error opening payment dialog:\", error);\n            alert(\"Failed to initialize payment. Please try again.\");\n        }\n    };\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n        setSelectedSlotId(null);\n        setSelectedTimeSlot(\"\");\n    };\n\n    return (\n        <div className=\"bookings-container\">\n            <Navbar />\n            <div className=\"bookings-content\">\n                <h1 className=\"bookings-heading\">Ajeenkya DY Patil Parking Zone</h1>\n\n                {loading ? (\n                    <p>Loading parking slots...</p>\n                ) : error ? (\n                    <p className=\"error-message\">{error}</p>\n                ) : (\n                    <div>\n                        <div className=\"date-picker-container\">\n                            <DatePicker\n                                selected={selectedDate}\n                                onChange={handleDateChange}\n                                minDate={new Date()}\n                                customInput={<CustomDateInput />}\n                                dateFormat=\"MMMM d, yyyy\"\n                                placeholderText=\"\"\n                                withPortal\n                            />\n                        </div>\n\n                        <div className=\"bookings-grid\">\n                            {parkingSlots.map((slot) => {\n                                const isOccupied = slot.isOccupied || bookedSlotId === slot.id;\n\n                                return (\n                                    <div\n                                        key={slot.id}\n                                        className={`parking-slot ${\n                                            slot.isOccupied === null\n                                                ? \"under-construction\"\n                                                : isOccupied\n                                                ? \"occupied\"\n                                                : \"available\"\n                                        }`}\n                                        onClick={() => {\n                                            if (!slot.isOccupied && slot.isOccupied !== null) {\n                                                setSelectedSlotId(slot.id);\n                                            }\n                                        }}\n                                    >\n                                        <span>Slot {slot.id}</span>\n                                        <span>\n                                            {slot.isOccupied === null\n                                                ? \"Under Construction\"\n                                                : isOccupied\n                                                ? slot.timeSlot\n                                                    ? `Booked for ${slot.timeSlot}`\n                                                    : \"Occupied\"\n                                                : \"Available\"}\n                                        </span>\n\n                                        {selectedSlotId === slot.id && !isOccupied && (\n                                            <div className=\"time-slot-selection\">\n                                                <label>Select Time Slot:</label>\n                                                <select\n                                                    value={selectedTimeSlot}\n                                                    onChange={(e) => setSelectedTimeSlot(e.target.value)}\n                                                >\n                                                    <option value=\"\">-- Select --</option>\n                                                    <option value=\"9 AM - 12 PM\">9 AM - 12 PM</option>\n                                                    <option value=\"12 PM - 3 PM\">12 PM - 3 PM</option>\n                                                    <option value=\"3 PM - 6 PM\">3 PM - 6 PM</option>\n                                                    <option value=\"6 PM - 9 PM\">6 PM - 9 PM</option>\n                                                </select>\n                                                <button onClick={() => handlePayment(slot.id)}>Book Now</button>\n                                            </div>\n                                        )}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                )}\n            </div>\n            <Reservation />\n            <Footer />\n        </div>\n    );\n};\n\nexport default Bookings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}