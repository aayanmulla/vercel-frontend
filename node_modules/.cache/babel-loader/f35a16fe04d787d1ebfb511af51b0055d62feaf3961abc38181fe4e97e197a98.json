{"ast":null,"code":"import React,{useState}from\"react\";import axios from\"axios\";import{useNavigate}from\"react-router-dom\";import{signInWithGoogle}from\"../Firebase\";// Import Google Sign-In function\nimport{FaGoogle,FaFacebook,FaTwitter}from\"react-icons/fa\";import\"./Login.css\";// Ensure you have this CSS file for styling\n// Create axios instance with enhanced configuration\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BACKEND_URL=process.env.REACT_APP_BACKEND_URL||'https://y-blue-ten.vercel.app/';const api=axios.create({baseURL:BACKEND_URL,timeout:10000,headers:{'Content-Type':'application/json'},withCredentials:true});// Add request and response interceptors for logging and debugging\napi.interceptors.request.use(config=>{console.log('Axios Request Config:',config);return config;},error=>{console.error('Axios Request Error:',error);return Promise.reject(error);});api.interceptors.response.use(response=>{console.log('Axios Response:',response);return response;},error=>{console.error('Axios Response Error:',error);if(error.response){console.error('Error data:',error.response.data);console.error('Error status:',error.response.status);console.error('Error headers:',error.response.headers);}else if(error.request){console.error('No response received:',error.request);}else{console.error('Error message:',error.message);}return Promise.reject(error);});const Login=()=>{const[formData,setFormData]=useState({email:\"\",password:\"\"});const[setUser]=useState(null);const[error,setError]=useState(\"\");const navigate=useNavigate();// Handle input change\nconst handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};// Handle login form submission\nconst handleSubmit=async e=>{e.preventDefault();setError(\"\");// Clear any previous error\ntry{// Log request details\nconsole.log('Login Attempt:',{backendUrl:api.defaults.baseURL,endpoint:'/login',email:formData.email});const response=await api.post(\"/login\",formData);if(response.status===200){const{token,user}=response.data;localStorage.setItem(\"token\",token);localStorage.setItem(\"user\",JSON.stringify(user));alert(\"Login successful!\");navigate(\"/bookings\");}}catch(error){var _error$response,_error$response2;// Extremely detailed error logging\nconsole.error(\"Comprehensive Login Error Details:\",{fullError:error,errorName:error.name,errorMessage:error.message,errorCode:error.code,networkError:error.code==='ERR_NETWORK',responseData:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data,responseStatus:(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status,requestConfig:error.config});// Specific error handling\nif(axios.isAxiosError(error)){if(error.code==='ERR_NETWORK'){setError(\"Network Error: Cannot connect to server. Check your connection.\");}else if(error.response){// Server responded with an error\nsetError(error.response.data.message||\"Login failed. Please try again.\");}else if(error.request){// Request made but no response received\nsetError(\"No response from server. Please check the backend.\");}else{setError(\"An unexpected error occurred during login.\");}}else{setError(\"An unknown error occurred. Please try again.\");}}};// Google Sign-In\nconst handleGoogleSignIn=async()=>{try{const result=await signInWithGoogle();setUser(result.user);// Store user info\nconsole.log(\"User signed in:\",result.user);// Optional: Send Google user info to backend if needed\ntry{await api.post(\"/api/google-login\",{email:result.user.email,name:result.user.displayName});}catch(backendError){console.error(\"Backend Google login error:\",backendError);}// Redirect to bookings page\nnavigate(\"/bookings\");}catch(error){console.error(\"Google Sign-In Error:\",error);setError(\"Google Sign-In failed. Please try again.\");}};return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"top-right-links\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"New User? \",/*#__PURE__*/_jsx(\"a\",{href:\"/signup\",children:\"Sign Up\"})]})}),/*#__PURE__*/_jsx(\"h1\",{className:\"logo\",children:\"ParkEz\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Welcome Back!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Login to continue\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"form\",{className:\"login-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",placeholder:\"username11@gmail.com\",value:formData.email,onChange:handleChange,required:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"input-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",placeholder:\"Enter Password\",value:formData.password,onChange:handleChange,required:true})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-button\",children:\"LOGIN\"}),/*#__PURE__*/_jsx(\"div\",{className:\"footer-links\",children:/*#__PURE__*/_jsx(\"a\",{href:\"/forgot-password\",children:\"Forgot Password?\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-social\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Login with\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"social-icons\",children:[/*#__PURE__*/_jsx(FaGoogle,{size:30,color:\"red\",onClick:handleGoogleSignIn,style:{cursor:\"pointer\"},title:\"Sign in with Google\"}),/*#__PURE__*/_jsx(FaFacebook,{size:30,color:\"blue\",style:{cursor:\"pointer\"},title:\"Sign in with Facebook\"}),/*#__PURE__*/_jsx(FaTwitter,{size:30,color:\"skyblue\",style:{cursor:\"pointer\"},title:\"Sign in with Twitter\"})]})]})]})});};export default Login;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}