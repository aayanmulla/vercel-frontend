{"ast":null,"code":"var _jsxFileName = \"/Users/karanpaigude/Desktop/Projects/Aayan Project/NewProject/ParkEz_Frontend/src/screens/Bookings/Bookings.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./Bookings.css\";\nimport Navbar from \"../NavBar/NavBar\";\nimport Reservation from \"../Reservations/Reservation\";\nimport Footer from \"../Footer/Footer\";\nimport { FaCalendarAlt } from \"react-icons/fa\";\nimport { renderTicketToHTML } from \"../Ticket/helper.tsx\";\n\n// Create consistent API configuration based on environment\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = process.env.NODE_ENV === \"development\" ? process.env.REACT_APP_LOCAL_API_BASE_URL || \"http://localhost:5001\" : process.env.REACT_APP_API_BASE_URL;\nconst api = axios.create({\n  baseURL: BACKEND_URL,\n  timeout: 10000,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  withCredentials: true\n});\n\n// Add request and response interceptors for logging\napi.interceptors.request.use(config => {\n  // Add token to headers if available\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  console.log(\"Bookings API Request:\", config);\n  return config;\n}, error => {\n  console.error(\"Bookings Request Error:\", error);\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => {\n  console.log(\"Bookings API Response:\", response);\n  return response;\n}, error => {\n  console.error(\"Bookings Response Error:\", error);\n  if (error.response) {\n    console.error(\"Error data:\", error.response.data);\n    console.error(\"Error status:\", error.response.status);\n  } else if (error.request) {\n    console.error(\"No response received:\", error.request);\n  } else {\n    console.error(\"Error message:\", error.message);\n  }\n  return Promise.reject(error);\n});\n\n// API endpoints\nconst API_ENDPOINTS = {\n  PARKING_SLOTS: \"/api/parking/slots\",\n  LATEST_BOOKED_SLOT: \"/api/slots/latest-booked-slot\",\n  RESERVED_SLOTS: \"/api/reserved/slots\",\n  SLOT_DETAILS: slotId => `/api/reserved/slotNumber/${slotId}`,\n  UPDATE_RESERVATION: objectId => `/api/reserved/${objectId}`,\n  SEND_EMAIL: \"/api/send-email\"\n};\nconst Bookings = () => {\n  _s();\n  const [parkingSlots, setParkingSlots] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [bookedSlotId] = useState(null);\n  const [selectedSlotId, setSelectedSlotId] = useState(null);\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  // Custom input component that shows calendar icon and selected date\n  const CustomDateInput = /*#__PURE__*/React.forwardRef(({\n    value,\n    onClick\n  }, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-date-input\",\n    onClick: onClick,\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(FaCalendarAlt, {\n      className: \"calendar-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), value && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"selected-date\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this));\n  const fetchAllData = async () => {\n    setLoading(true);\n    try {\n      // Use Promise.all with the new API setup\n      const [parkingRes, latestRes, reservedRes] = await Promise.all([api.get(API_ENDPOINTS.PARKING_SLOTS), api.get(API_ENDPOINTS.LATEST_BOOKED_SLOT), api.get(API_ENDPOINTS.RESERVED_SLOTS)]);\n      const parkingData = parkingRes.data;\n      const latestData = latestRes.data;\n      const reservedData = reservedRes.data;\n      const parkingSlots = parkingData.parkingSlots || [];\n      const reservedSlots = reservedData.parkingSlots || [];\n      const latestBookedSlotId = latestData.latestBookedSlotId;\n      const reservedMap = new Map(reservedSlots.map(slot => [slot.id, slot]));\n      const updatedSlots = parkingSlots.map(slot => {\n        if (reservedMap.has(slot.id)) {\n          return reservedMap.get(slot.id); // Use reserved slot data (includes timeSlot)\n        }\n        return slot;\n      });\n      if (latestBookedSlotId) {\n        const slotIndex = updatedSlots.findIndex(slot => slot.id === latestBookedSlotId);\n        if (slotIndex !== -1) {\n          updatedSlots[slotIndex] = {\n            ...updatedSlots[slotIndex],\n            isOccupied: true,\n            status: \"occupied\"\n          };\n        } else {\n          updatedSlots.push({\n            id: latestBookedSlotId,\n            isOccupied: true,\n            status: \"occupied\"\n          });\n        }\n      }\n      setParkingSlots(updatedSlots);\n      return updatedSlots;\n    } catch (error) {\n      console.error(\"Error fetching booking data:\", error);\n      setError(\"Failed to load parking slots. Please try again later.\");\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchAllData();\n    const interval = setInterval(fetchAllData, 180000); // Refresh every 3 minutes\n    return () => clearInterval(interval);\n  }, []);\n  const handlePayment = async slotId => {\n    const bookingDate = selectedDate || new Date();\n    if (!selectedTimeSlot) {\n      alert(\"Please select a time slot before proceeding with payment.\");\n      return;\n    }\n    const options = {\n      key: \"rzp_test_8aHz8s9WnoELui\",\n      amount: 50 * 100,\n      currency: \"INR\",\n      name: \"ParkEz\",\n      description: `Parking Slot Payment: ${bookingDate.toLocaleDateString()} ${selectedTimeSlot}`,\n      handler: async function (response) {\n        try {\n          console.log(\"Fetching slot details for slotId:\", slotId);\n\n          // Get slot details\n          const slotRes = await api.get(API_ENDPOINTS.SLOT_DETAILS(slotId));\n          const slotData = slotRes.data;\n          if (!slotData._id) {\n            alert(\"Slot not found. Please try again.\");\n            return;\n          }\n          const objectId = slotData._id;\n          console.log(\"Fetched objectId:\", objectId);\n\n          // Update the reserved slot\n          await api.patch(API_ENDPOINTS.UPDATE_RESERVATION(objectId), {\n            isOccupied: true,\n            paymentId: response.razorpay_payment_id,\n            timeSlot: selectedTimeSlot,\n            bookedAt: bookingDate.toISOString(),\n            status: \"occupied\"\n          });\n          console.log(\"Slot successfully updated!\");\n          await fetchAllData();\n\n          // Send confirmation email\n          const user = JSON.parse(localStorage.getItem(\"user\"));\n          const userEmail = user === null || user === void 0 ? void 0 : user.email;\n          if (userEmail) {\n            const bookingData = {\n              slotId: slotId,\n              date: bookingDate.toLocaleDateString(),\n              timeSlot: selectedTimeSlot,\n              paymentId: response.razorpay_payment_id\n            };\n            const ticketHTML = renderTicketToHTML(bookingData);\n            await api.post(API_ENDPOINTS.SEND_EMAIL, {\n              to: userEmail,\n              subject: \"Booking Confirmation\",\n              html: ticketHTML\n            });\n          } else {\n            console.error(\"Email not found in localStorage.\");\n          }\n          alert(`Payment successful! Your slot has been reserved for ${bookingDate.toLocaleDateString()} ${selectedTimeSlot}`);\n        } catch (error) {\n          console.error(\"Payment processing error:\", error);\n          alert(\"Payment succeeded but error updating reservation. Contact support.\");\n        }\n      },\n      prefill: {\n        name: \"Aayan Mulla\",\n        email: \"aayanmulla10@gmail.com\",\n        contact: \"7083076077\"\n      },\n      theme: {\n        color: \"#3399cc\"\n      }\n    };\n    try {\n      const rzp1 = new window.Razorpay(options);\n      rzp1.open();\n    } catch (error) {\n      console.error(\"Error opening payment dialog:\", error);\n      alert(\"Failed to initialize payment. Please try again.\");\n    }\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    setSelectedSlotId(null);\n    setSelectedTimeSlot(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bookings-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookings-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"bookings-heading\",\n        children: \"Ajeenkya DY Patil Parking Zone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading parking slots...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-picker-container\",\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: selectedDate,\n            onChange: handleDateChange,\n            minDate: new Date(),\n            customInput: /*#__PURE__*/_jsxDEV(CustomDateInput, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 30\n            }, this),\n            dateFormat: \"MMMM d, yyyy\",\n            placeholderText: \"\",\n            withPortal: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookings-grid\",\n          children: parkingSlots.map(slot => {\n            const isOccupied = slot.isOccupied || bookedSlotId === slot.id;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `parking-slot ${slot.isOccupied === null ? \"under-construction\" : isOccupied ? \"occupied\" : \"available\"}`,\n              onClick: () => {\n                if (!slot.isOccupied && slot.isOccupied !== null) {\n                  setSelectedSlotId(slot.id);\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Slot \", slot.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: slot.isOccupied === null ? \"Under Construction\" : isOccupied ? slot.timeSlot ? `Booked for ${slot.timeSlot}` : \"Occupied\" : \"Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 21\n              }, this), selectedSlotId === slot.id && !isOccupied && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-slot-selection\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Select Time Slot:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedTimeSlot,\n                  onChange: e => setSelectedTimeSlot(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"-- Select --\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"9 AM - 12 PM\",\n                    children: \"9 AM - 12 PM\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"12 PM - 3 PM\",\n                    children: \"12 PM - 3 PM\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"3 PM - 6 PM\",\n                    children: \"3 PM - 6 PM\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"6 PM - 9 PM\",\n                    children: \"6 PM - 9 PM\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handlePayment(slot.id),\n                  children: \"Book Now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 23\n              }, this)]\n            }, slot.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reservation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n_s(Bookings, \"IQFSBtCB8IE7ngEcugCj0x0lfQc=\");\n_c = Bookings;\nexport default Bookings;\nvar _c;\n$RefreshReg$(_c, \"Bookings\");","map":{"version":3,"names":["React","useEffect","useState","axios","DatePicker","Navbar","Reservation","Footer","FaCalendarAlt","renderTicketToHTML","jsxDEV","_jsxDEV","BACKEND_URL","process","env","NODE_ENV","REACT_APP_LOCAL_API_BASE_URL","REACT_APP_API_BASE_URL","api","create","baseURL","timeout","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","console","log","error","Promise","reject","response","data","status","message","API_ENDPOINTS","PARKING_SLOTS","LATEST_BOOKED_SLOT","RESERVED_SLOTS","SLOT_DETAILS","slotId","UPDATE_RESERVATION","objectId","SEND_EMAIL","Bookings","_s","parkingSlots","setParkingSlots","loading","setLoading","setError","bookedSlotId","selectedSlotId","setSelectedSlotId","selectedTimeSlot","setSelectedTimeSlot","selectedDate","setSelectedDate","CustomDateInput","forwardRef","value","onClick","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fetchAllData","parkingRes","latestRes","reservedRes","all","get","parkingData","latestData","reservedData","reservedSlots","latestBookedSlotId","reservedMap","Map","map","slot","id","updatedSlots","has","slotIndex","findIndex","isOccupied","push","interval","setInterval","clearInterval","handlePayment","bookingDate","Date","alert","options","key","amount","currency","name","description","toLocaleDateString","handler","slotRes","slotData","_id","patch","paymentId","razorpay_payment_id","timeSlot","bookedAt","toISOString","user","JSON","parse","userEmail","email","bookingData","date","ticketHTML","post","to","subject","html","prefill","contact","theme","color","rzp1","window","Razorpay","open","handleDateChange","selected","onChange","minDate","customInput","dateFormat","placeholderText","withPortal","e","target","_c","$RefreshReg$"],"sources":["/Users/karanpaigude/Desktop/Projects/Aayan Project/NewProject/ParkEz_Frontend/src/screens/Bookings/Bookings.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./Bookings.css\";\nimport Navbar from \"../NavBar/NavBar\";\nimport Reservation from \"../Reservations/Reservation\";\nimport Footer from \"../Footer/Footer\";\nimport { FaCalendarAlt } from \"react-icons/fa\";\nimport { renderTicketToHTML } from \"../Ticket/helper.tsx\";\n\n// Create consistent API configuration based on environment\nconst BACKEND_URL = \n  process.env.NODE_ENV === \"development\"\n    ? process.env.REACT_APP_LOCAL_API_BASE_URL || \"http://localhost:5001\"\n    : process.env.REACT_APP_API_BASE_URL;\n\nconst api = axios.create({\n  baseURL: BACKEND_URL,\n  timeout: 10000,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  withCredentials: true,\n});\n\n// Add request and response interceptors for logging\napi.interceptors.request.use(\n  (config) => {\n    // Add token to headers if available\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    console.log(\"Bookings API Request:\", config);\n    return config;\n  },\n  (error) => {\n    console.error(\"Bookings Request Error:\", error);\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => {\n    console.log(\"Bookings API Response:\", response);\n    return response;\n  },\n  (error) => {\n    console.error(\"Bookings Response Error:\", error);\n    if (error.response) {\n      console.error(\"Error data:\", error.response.data);\n      console.error(\"Error status:\", error.response.status);\n    } else if (error.request) {\n      console.error(\"No response received:\", error.request);\n    } else {\n      console.error(\"Error message:\", error.message);\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API endpoints\nconst API_ENDPOINTS = {\n  PARKING_SLOTS: \"/api/parking/slots\",\n  LATEST_BOOKED_SLOT: \"/api/slots/latest-booked-slot\",\n  RESERVED_SLOTS: \"/api/reserved/slots\",\n  SLOT_DETAILS: (slotId) => `/api/reserved/slotNumber/${slotId}`,\n  UPDATE_RESERVATION: (objectId) => `/api/reserved/${objectId}`,\n  SEND_EMAIL: \"/api/send-email\",\n};\n\nconst Bookings = () => {\n  const [parkingSlots, setParkingSlots] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [bookedSlotId] = useState(null);\n  const [selectedSlotId, setSelectedSlotId] = useState(null);\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  // Custom input component that shows calendar icon and selected date\n  const CustomDateInput = React.forwardRef(({ value, onClick }, ref) => (\n    <div className=\"custom-date-input\" onClick={onClick} ref={ref}>\n      <FaCalendarAlt className=\"calendar-icon\" />\n      {value && <span className=\"selected-date\">{value}</span>}\n    </div>\n  ));\n\n  const fetchAllData = async () => {\n    setLoading(true);\n    try {\n      // Use Promise.all with the new API setup\n      const [parkingRes, latestRes, reservedRes] = await Promise.all([\n        api.get(API_ENDPOINTS.PARKING_SLOTS),\n        api.get(API_ENDPOINTS.LATEST_BOOKED_SLOT),\n        api.get(API_ENDPOINTS.RESERVED_SLOTS),\n      ]);\n\n      const parkingData = parkingRes.data;\n      const latestData = latestRes.data;\n      const reservedData = reservedRes.data;\n\n      const parkingSlots = parkingData.parkingSlots || [];\n      const reservedSlots = reservedData.parkingSlots || [];\n      const latestBookedSlotId = latestData.latestBookedSlotId;\n\n      const reservedMap = new Map(reservedSlots.map((slot) => [slot.id, slot]));\n\n      const updatedSlots = parkingSlots.map((slot) => {\n        if (reservedMap.has(slot.id)) {\n          return reservedMap.get(slot.id); // Use reserved slot data (includes timeSlot)\n        }\n        return slot;\n      });\n\n      if (latestBookedSlotId) {\n        const slotIndex = updatedSlots.findIndex(\n          (slot) => slot.id === latestBookedSlotId,\n        );\n        if (slotIndex !== -1) {\n          updatedSlots[slotIndex] = {\n            ...updatedSlots[slotIndex],\n            isOccupied: true,\n            status: \"occupied\",\n          };\n        } else {\n          updatedSlots.push({\n            id: latestBookedSlotId,\n            isOccupied: true,\n            status: \"occupied\",\n          });\n        }\n      }\n\n      setParkingSlots(updatedSlots);\n      return updatedSlots;\n    } catch (error) {\n      console.error(\"Error fetching booking data:\", error);\n      setError(\"Failed to load parking slots. Please try again later.\");\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchAllData();\n    const interval = setInterval(fetchAllData, 180000); // Refresh every 3 minutes\n    return () => clearInterval(interval);\n  }, []);\n\n  const handlePayment = async (slotId) => {\n    const bookingDate = selectedDate || new Date();\n\n    if (!selectedTimeSlot) {\n      alert(\"Please select a time slot before proceeding with payment.\");\n      return;\n    }\n\n    const options = {\n      key: \"rzp_test_8aHz8s9WnoELui\",\n      amount: 50 * 100,\n      currency: \"INR\",\n      name: \"ParkEz\",\n      description: `Parking Slot Payment: ${bookingDate.toLocaleDateString()} ${selectedTimeSlot}`,\n      handler: async function (response) {\n        try {\n          console.log(\"Fetching slot details for slotId:\", slotId);\n\n          // Get slot details\n          const slotRes = await api.get(API_ENDPOINTS.SLOT_DETAILS(slotId));\n          const slotData = slotRes.data;\n          \n          if (!slotData._id) {\n            alert(\"Slot not found. Please try again.\");\n            return;\n          }\n\n          const objectId = slotData._id;\n          console.log(\"Fetched objectId:\", objectId);\n\n          // Update the reserved slot\n          await api.patch(\n            API_ENDPOINTS.UPDATE_RESERVATION(objectId),\n            {\n              isOccupied: true,\n              paymentId: response.razorpay_payment_id,\n              timeSlot: selectedTimeSlot,\n              bookedAt: bookingDate.toISOString(),\n              status: \"occupied\",\n            }\n          );\n\n          console.log(\"Slot successfully updated!\");\n          await fetchAllData();\n\n          // Send confirmation email\n          const user = JSON.parse(localStorage.getItem(\"user\"));\n          const userEmail = user?.email;\n\n          if (userEmail) {\n            const bookingData = {\n              slotId: slotId,\n              date: bookingDate.toLocaleDateString(),\n              timeSlot: selectedTimeSlot,\n              paymentId: response.razorpay_payment_id,\n            };\n            const ticketHTML = renderTicketToHTML(bookingData);\n            \n            await api.post(API_ENDPOINTS.SEND_EMAIL, {\n              to: userEmail,\n              subject: \"Booking Confirmation\",\n              html: ticketHTML,\n            });\n          } else {\n            console.error(\"Email not found in localStorage.\");\n          }\n          \n          alert(\n            `Payment successful! Your slot has been reserved for ${bookingDate.toLocaleDateString()} ${selectedTimeSlot}`\n          );\n        } catch (error) {\n          console.error(\"Payment processing error:\", error);\n          alert(\n            \"Payment succeeded but error updating reservation. Contact support.\"\n          );\n        }\n      },\n      prefill: {\n        name: \"Aayan Mulla\",\n        email: \"aayanmulla10@gmail.com\",\n        contact: \"7083076077\",\n      },\n      theme: {\n        color: \"#3399cc\",\n      },\n    };\n\n    try {\n      const rzp1 = new window.Razorpay(options);\n      rzp1.open();\n    } catch (error) {\n      console.error(\"Error opening payment dialog:\", error);\n      alert(\"Failed to initialize payment. Please try again.\");\n    }\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    setSelectedSlotId(null);\n    setSelectedTimeSlot(\"\");\n  };\n\n  return (\n    <div className=\"bookings-container\">\n      <Navbar />\n      <div className=\"bookings-content\">\n        <h1 className=\"bookings-heading\">Ajeenkya DY Patil Parking Zone</h1>\n\n        {loading ? (\n          <p>Loading parking slots...</p>\n        ) : error ? (\n          <p className=\"error-message\">{error}</p>\n        ) : (\n          <div>\n            <div className=\"date-picker-container\">\n              <DatePicker\n                selected={selectedDate}\n                onChange={handleDateChange}\n                minDate={new Date()}\n                customInput={<CustomDateInput />}\n                dateFormat=\"MMMM d, yyyy\"\n                placeholderText=\"\"\n                withPortal\n              />\n            </div>\n\n            <div className=\"bookings-grid\">\n              {parkingSlots.map((slot) => {\n                const isOccupied = slot.isOccupied || bookedSlotId === slot.id;\n\n                return (\n                  <div\n                    key={slot.id}\n                    className={`parking-slot ${\n                      slot.isOccupied === null\n                        ? \"under-construction\"\n                        : isOccupied\n                          ? \"occupied\"\n                          : \"available\"\n                    }`}\n                    onClick={() => {\n                      if (!slot.isOccupied && slot.isOccupied !== null) {\n                        setSelectedSlotId(slot.id);\n                      }\n                    }}\n                  >\n                    <span>Slot {slot.id}</span>\n                    <span>\n                      {slot.isOccupied === null\n                        ? \"Under Construction\"\n                        : isOccupied\n                          ? slot.timeSlot\n                            ? `Booked for ${slot.timeSlot}`\n                            : \"Occupied\"\n                          : \"Available\"}\n                    </span>\n\n                    {selectedSlotId === slot.id && !isOccupied && (\n                      <div className=\"time-slot-selection\">\n                        <label>Select Time Slot:</label>\n                        <select\n                          value={selectedTimeSlot}\n                          onChange={(e) => setSelectedTimeSlot(e.target.value)}\n                        >\n                          <option value=\"\">-- Select --</option>\n                          <option value=\"9 AM - 12 PM\">9 AM - 12 PM</option>\n                          <option value=\"12 PM - 3 PM\">12 PM - 3 PM</option>\n                          <option value=\"3 PM - 6 PM\">3 PM - 6 PM</option>\n                          <option value=\"6 PM - 9 PM\">6 PM - 9 PM</option>\n                        </select>\n                        <button onClick={() => handlePayment(slot.id)}>\n                          Book Now\n                        </button>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n      <Reservation />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Bookings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}